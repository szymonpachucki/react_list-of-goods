{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reversOrder","setState","sortAlphabetically","ALPHABET","sortByLength","LENGTH","sortReset","visibleGoods","goods","console","log","sort","a","b","localeCompare","length","reverse","getReorderedGoods","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,YAAc,WACZ,EAAKC,UAAS,SAAAL,GACZ,MAAO,CACLC,YAAaD,EAAMC,gBAT3B,EAcEK,mBAAqB,WACnB,EAAKD,SAAS,CACZH,SAAUL,EAASU,YAhBzB,EAoBEC,aAAe,WACb,EAAKH,SAAS,CACZH,SAAUL,EAASY,UAtBzB,EA0BEC,UAAY,WACV,EAAKL,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KA7BlB,4CAiCE,WACE,IAAMU,EAhEH,SACLC,EADK,GAGJ,IADCV,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNU,EAAY,YAAOC,GAgBzB,OAZAC,QAAQC,IAAIZ,EAAUD,GAElBC,IAAaL,EAASU,SACxBI,EAAaI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MACnCf,IAAaL,EAASY,QAC/BE,EAAaI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAGvClB,GACFU,EAAaS,UAGRT,EA2CgBU,CAAkBvB,EAAiB,CACtDI,SAAUoB,KAAKtB,MAAME,SACrBD,WAAYqB,KAAKtB,MAAMC,aAGzB,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBD,KAAKtB,MAAME,WAAaL,EAASU,SAAW,WAAa,IACtFkB,QAASH,KAAKhB,mBAHhB,iCAQA,wBACEkB,KAAK,SACLD,UAAS,4BAAuBD,KAAKtB,MAAME,WAAaL,EAASY,OAAS,WAAa,IACvFgB,QAASH,KAAKd,aAHhB,4BAQA,wBACEgB,KAAK,SACLD,UAAS,6BAAiD,IAA1BD,KAAKtB,MAAMC,WAAuB,WAAa,IAC/EwB,QAASH,KAAKlB,YAHhB,sBAOGkB,KAAKtB,MAAME,WAAaL,EAASM,MAAUmB,KAAKtB,MAAMC,aAEvD,wBACEuB,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKZ,UAHhB,sBAUJ,6BACE,6BACGC,EAAae,KAAI,SAACC,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBAhFtC,GAAyBC,IAAMC,WCxD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c389ea02.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  } else if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reversOrder = () => {\n    this.setState(state => {\n      return {\n        isReversed: !state.isReversed,\n      };\n    });\n  };\n\n  sortAlphabetically = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  sortReset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const visibleGoods = getReorderedGoods(goodsFromServer, {\n      sortType: this.state.sortType,\n      isReversed: this.state.isReversed,\n    });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${this.state.sortType !== SortType.ALPHABET ? 'is-light' : ''}`}\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${this.state.sortType !== SortType.LENGTH ? 'is-light' : ''}`}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${this.state.isReversed === false ? 'is-light' : ''}`}\n            onClick={this.reversOrder}\n          >\n            Reverse\n          </button>\n          {((this.state.sortType !== SortType.NONE) || (this.state.isReversed))\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.sortReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map((good) => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}